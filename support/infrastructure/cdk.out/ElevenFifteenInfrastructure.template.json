{
 "Resources": {
  "VPCB9E5F0B4": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "ElevenFifteenInfrastructure/VPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ElevenFifteenInfrastructure/VPC/Resource"
   }
  },
  "VPCcomputesubnetSubnet1Subnet93651DA8": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "compute-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "ElevenFifteenInfrastructure/VPC/compute-subnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElevenFifteenInfrastructure/VPC/compute-subnetSubnet1/Subnet"
   }
  },
  "VPCcomputesubnetSubnet1RouteTable5EB8D007": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "ElevenFifteenInfrastructure/VPC/compute-subnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElevenFifteenInfrastructure/VPC/compute-subnetSubnet1/RouteTable"
   }
  },
  "VPCcomputesubnetSubnet1RouteTableAssociation47EAA4EE": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCcomputesubnetSubnet1RouteTable5EB8D007"
    },
    "SubnetId": {
     "Ref": "VPCcomputesubnetSubnet1Subnet93651DA8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElevenFifteenInfrastructure/VPC/compute-subnetSubnet1/RouteTableAssociation"
   }
  },
  "VPCcomputesubnetSubnet1DefaultRoute01BFF147": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "RouteTableId": {
     "Ref": "VPCcomputesubnetSubnet1RouteTable5EB8D007"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ],
   "Metadata": {
    "aws:cdk:path": "ElevenFifteenInfrastructure/VPC/compute-subnetSubnet1/DefaultRoute"
   }
  },
  "VPCcomputesubnetSubnet2SubnetDE6A68F9": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.1.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "compute-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "ElevenFifteenInfrastructure/VPC/compute-subnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElevenFifteenInfrastructure/VPC/compute-subnetSubnet2/Subnet"
   }
  },
  "VPCcomputesubnetSubnet2RouteTable7ABD8F68": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "ElevenFifteenInfrastructure/VPC/compute-subnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElevenFifteenInfrastructure/VPC/compute-subnetSubnet2/RouteTable"
   }
  },
  "VPCcomputesubnetSubnet2RouteTableAssociation9B0AB111": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCcomputesubnetSubnet2RouteTable7ABD8F68"
    },
    "SubnetId": {
     "Ref": "VPCcomputesubnetSubnet2SubnetDE6A68F9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElevenFifteenInfrastructure/VPC/compute-subnetSubnet2/RouteTableAssociation"
   }
  },
  "VPCcomputesubnetSubnet2DefaultRouteCA5E8C9E": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "RouteTableId": {
     "Ref": "VPCcomputesubnetSubnet2RouteTable7ABD8F68"
    }
   },
   "DependsOn": [
    "VPCVPCGW99B986DC"
   ],
   "Metadata": {
    "aws:cdk:path": "ElevenFifteenInfrastructure/VPC/compute-subnetSubnet2/DefaultRoute"
   }
  },
  "VPCdatasubnetSubnet1Subnet4551EF92": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.2.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "data-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "ElevenFifteenInfrastructure/VPC/data-subnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElevenFifteenInfrastructure/VPC/data-subnetSubnet1/Subnet"
   }
  },
  "VPCdatasubnetSubnet1RouteTable2DE58AAC": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "ElevenFifteenInfrastructure/VPC/data-subnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElevenFifteenInfrastructure/VPC/data-subnetSubnet1/RouteTable"
   }
  },
  "VPCdatasubnetSubnet1RouteTableAssociation190A6F69": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCdatasubnetSubnet1RouteTable2DE58AAC"
    },
    "SubnetId": {
     "Ref": "VPCdatasubnetSubnet1Subnet4551EF92"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElevenFifteenInfrastructure/VPC/data-subnetSubnet1/RouteTableAssociation"
   }
  },
  "VPCdatasubnetSubnet2Subnet83437AF9": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.3.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "data-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "ElevenFifteenInfrastructure/VPC/data-subnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElevenFifteenInfrastructure/VPC/data-subnetSubnet2/Subnet"
   }
  },
  "VPCdatasubnetSubnet2RouteTable078460E1": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "ElevenFifteenInfrastructure/VPC/data-subnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElevenFifteenInfrastructure/VPC/data-subnetSubnet2/RouteTable"
   }
  },
  "VPCdatasubnetSubnet2RouteTableAssociation0A83CF71": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VPCdatasubnetSubnet2RouteTable078460E1"
    },
    "SubnetId": {
     "Ref": "VPCdatasubnetSubnet2Subnet83437AF9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElevenFifteenInfrastructure/VPC/data-subnetSubnet2/RouteTableAssociation"
   }
  },
  "VPCIGWB7E252D3": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "ElevenFifteenInfrastructure/VPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ElevenFifteenInfrastructure/VPC/IGW"
   }
  },
  "VPCVPCGW99B986DC": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VPCIGWB7E252D3"
    },
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElevenFifteenInfrastructure/VPC/VPCGW"
   }
  },
  "VPCRestrictDefaultSecurityGroupCustomResource59474679": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "VPCB9E5F0B4",
      "DefaultSecurityGroup"
     ]
    },
    "Account": {
     "Ref": "AWS::AccountId"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ElevenFifteenInfrastructure/VPC/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":ec2:",
             {
              "Ref": "AWS::Region"
             },
             ":",
             {
              "Ref": "AWS::AccountId"
             },
             ":security-group/",
             {
              "Fn::GetAtt": [
               "VPCB9E5F0B4",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ElevenFifteenInfrastructure/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "dd5711540f04e06aa955d7f4862fc04e8cdea464cb590dae91ed2976bb78098e.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "ElevenFifteenInfrastructure/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.dd5711540f04e06aa955d7f4862fc04e8cdea464cb590dae91ed2976bb78098e",
    "aws:asset:property": "Code"
   }
  },
  "Ec2SecurityGroup55889913": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for compute EC2 instance",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow SSH access from a specific block",
      "FromPort": 22,
      "IpProtocol": "tcp",
      "ToPort": 22
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allows HTTPS access from Internet",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "VpcId": {
     "Ref": "VPCB9E5F0B4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElevenFifteenInfrastructure/Ec2SecurityGroup/Resource"
   }
  },
  "Ec2Role2FD9A272": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ElevenFifteenInfrastructure/Ec2Role/Resource"
   }
  },
  "ElevenFifteenComputeInstanceInstanceProfile63ADD3AE": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "Ec2Role2FD9A272"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ElevenFifteenInfrastructure/ElevenFifteenComputeInstance/InstanceProfile"
   }
  },
  "ElevenFifteenComputeInstance504098C8": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "IamInstanceProfile": {
     "Ref": "ElevenFifteenComputeInstanceInstanceProfile63ADD3AE"
    },
    "ImageId": {
     "Fn::FindInMap": [
      "ElevenFifteenComputeInstanceAmiMap32028FE6",
      {
       "Ref": "AWS::Region"
      },
      "ami"
     ]
    },
    "InstanceType": "t3.micro",
    "KeyName": "keys",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "Ec2SecurityGroup55889913",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "VPCcomputesubnetSubnet1Subnet93651DA8"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "ElevenFifteenInfrastructure/ElevenFifteenComputeInstance"
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash\ncurl -o ./pkgx --compressed -f --proto '=https' https://pkgx.sh/$(uname)/$(uname -m)\nsudo install -m 755 pkgx /usr/local/bin\nexport PATH=$PATH:/home/admin/.local/bin\npkgx install docker\npkgx install docker-compose\npkgx install git\nexport PATH=$PATH:/home/admin/.local/bin\ngit clone https://github.com/softservesoftware/1115-hub.git\ncd 1115-hub/support/infrastructure/containers\nsudo systemctl start docker\ndocker-compose up --build"
    }
   },
   "DependsOn": [
    "Ec2Role2FD9A272"
   ],
   "Metadata": {
    "aws:cdk:path": "ElevenFifteenInfrastructure/ElevenFifteenComputeInstance/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/22QwW6DMAyGn2X3kHU57dpxqHqYhGDqtQrB7dyCgxKHqkK8e8Ogiybt5N+f89uOlXxTSm5e9M1nprlmLdZyrFibq4joOIJRcjz0RuQnOhS5KELdoqlCTcAzS6q0geFL1y0kntjWe2tQM1r6fSwKh4NmSD32xOCi3kV60/d16JptOa713QGxqMAEh3zfORv6n3F/wJ48azKwtFz0JFB3ciztst8zPsuFsydsYZpECd4GN5uDZ9ulNJr+L0XvgA24D+1BxI8CxwOekc6z51P3/SpzSw3OF5gE2Qbkxb8OaiPf4/kvHjFzgRg7kOUSH3OHA/6bAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "ElevenFifteenInfrastructure/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Mappings": {
  "ElevenFifteenComputeInstanceAmiMap32028FE6": {
   "us-east-1": {
    "ami": "ami-0133fb3dded749b65"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}